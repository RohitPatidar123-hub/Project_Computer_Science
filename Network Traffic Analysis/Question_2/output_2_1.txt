********** Unique IP Estimation Using Bucket-Based HyperLogLog **********

====== Processing File: ../network_analysis_data1.csv ======
Approximate unique IP count (Bucket Method HLL): 8107.91
Exact unique IP count: 8029
Error rate: 0.98%
✅ Error rate is within acceptable bounds (≤10%).

--- Computation Time ---
Time taken (HyperLogLog): 0.529737 seconds
Time taken (Exact Count): 0.010640 seconds

--- Space Usage ---
Memory for HLL buckets (approx): 36916 bytes
Memory for Exact IP set (approx): 1022522 bytes

--- Trade-off Analysis ---
Space: HyperLogLog uses fixed, sublinear space (here, 2^p buckets) compared to storing all unique IPs exactly.
Accuracy: When properly tuned, HyperLogLog typically achieves ~1–3% error; high error here indicates parameter tuning may be needed.
Computation Time: HyperLogLog updates are O(1) per element, making it very fast for large datasets compared to linear methods.
--------------------------------------------------------------

====== Processing File: ../network_analysis_data2.csv ======
Approximate unique IP count (Bucket Method HLL): 2584.11
Exact unique IP count: 2631
Error rate: 1.78%
✅ Error rate is within acceptable bounds (≤10%).

--- Computation Time ---
Time taken (HyperLogLog): 0.399145 seconds
Time taken (Exact Count): 0.007554 seconds

--- Space Usage ---
Memory for HLL buckets (approx): 36564 bytes
Memory for Exact IP set (approx): 294313 bytes

--- Trade-off Analysis ---
Space: HyperLogLog uses fixed, sublinear space (here, 2^p buckets) compared to storing all unique IPs exactly.
Accuracy: When properly tuned, HyperLogLog typically achieves ~1–3% error; high error here indicates parameter tuning may be needed.
Computation Time: HyperLogLog updates are O(1) per element, making it very fast for large datasets compared to linear methods.
--------------------------------------------------------------

====== Processing File: ../network_analysis_data3.csv ======
Approximate unique IP count (Bucket Method HLL): 2553.56
Exact unique IP count: 2659
Error rate: 3.97%
✅ Error rate is within acceptable bounds (≤10%).

--- Computation Time ---
Time taken (HyperLogLog): 0.827649 seconds
Time taken (Exact Count): 0.016330 seconds

--- Space Usage ---
Memory for HLL buckets (approx): 36552 bytes
Memory for Exact IP set (approx): 295980 bytes

--- Trade-off Analysis ---
Space: HyperLogLog uses fixed, sublinear space (here, 2^p buckets) compared to storing all unique IPs exactly.
Accuracy: When properly tuned, HyperLogLog typically achieves ~1–3% error; high error here indicates parameter tuning may be needed.
Computation Time: HyperLogLog updates are O(1) per element, making it very fast for large datasets compared to linear methods.
--------------------------------------------------------------

====== Processing File: ../network_analysis_data4.csv ======
Approximate unique IP count (Bucket Method HLL): 4810.50
Exact unique IP count: 4750
Error rate: 1.27%
✅ Error rate is within acceptable bounds (≤10%).

--- Computation Time ---
Time taken (HyperLogLog): 2.057091 seconds
Time taken (Exact Count): 0.046384 seconds

--- Space Usage ---
Memory for HLL buckets (approx): 36872 bytes
Memory for Exact IP set (approx): 425884 bytes

--- Trade-off Analysis ---
Space: HyperLogLog uses fixed, sublinear space (here, 2^p buckets) compared to storing all unique IPs exactly.
Accuracy: When properly tuned, HyperLogLog typically achieves ~1–3% error; high error here indicates parameter tuning may be needed.
Computation Time: HyperLogLog updates are O(1) per element, making it very fast for large datasets compared to linear methods.
--------------------------------------------------------------

====== Processing File: ../network_analysis_data5.csv ======
Approximate unique IP count (Bucket Method HLL): 23678.27
Exact unique IP count: 24068
Error rate: 1.62%
✅ Error rate is within acceptable bounds (≤10%).

--- Computation Time ---
Time taken (HyperLogLog): 1.784370 seconds
Time taken (Exact Count): 0.034145 seconds

--- Space Usage ---
Memory for HLL buckets (approx): 36920 bytes
Memory for Exact IP set (approx): 3590137 bytes

--- Trade-off Analysis ---
Space: HyperLogLog uses fixed, sublinear space (here, 2^p buckets) compared to storing all unique IPs exactly.
Accuracy: When properly tuned, HyperLogLog typically achieves ~1–3% error; high error here indicates parameter tuning may be needed.
Computation Time: HyperLogLog updates are O(1) per element, making it very fast for large datasets compared to linear methods.
--------------------------------------------------------------

====== Processing File: ../network_analysis_data6.csv ======
Approximate unique IP count (Bucket Method HLL): 5652.16
Exact unique IP count: 5638
Error rate: 0.25%
✅ Error rate is within acceptable bounds (≤10%).

--- Computation Time ---
Time taken (HyperLogLog): 1.614007 seconds
Time taken (Exact Count): 0.030230 seconds

--- Space Usage ---
Memory for HLL buckets (approx): 36908 bytes
Memory for Exact IP set (approx): 874012 bytes

--- Trade-off Analysis ---
Space: HyperLogLog uses fixed, sublinear space (here, 2^p buckets) compared to storing all unique IPs exactly.
Accuracy: When properly tuned, HyperLogLog typically achieves ~1–3% error; high error here indicates parameter tuning may be needed.
Computation Time: HyperLogLog updates are O(1) per element, making it very fast for large datasets compared to linear methods.
--------------------------------------------------------------

====== Combined Data Analysis ======
====== Processing Combined Data: All Combined Files ======
Approximate unique IP count (Bucket Method HLL): 34099.35
Exact unique IP count: 34801
Error rate: 2.02%
✅ Error rate is within acceptable bounds (≤10%).

--- Computation Time ---
Time taken (HyperLogLog): 7.307079 seconds
Time taken (Exact Count): 0.122341 seconds

--- Space Usage ---
Memory for HLL buckets (approx): 36920 bytes
Memory for Exact IP set (approx): 4255621 bytes

--- Trade-off Analysis ---
Space: HyperLogLog uses fixed, sublinear space (here, 2^p buckets) compared to storing all unique IPs exactly.
Accuracy: When properly tuned, HyperLogLog typically achieves ~1–3% error; high error here indicates parameter tuning may be needed.
Computation Time: HyperLogLog updates are O(1) per element, making it very fast for large datasets compared to linear methods.
--------------------------------------------------------------
