
;; Function main (main, funcdef_no=0, decl_uid=4826, cgraph_uid=1, symbol_order=0)

int main ()
{
  int a;
  int D.4830;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  a_1 = 4;
  printf ("%d", a_1);
  _4 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 1 (a_1 - 1 )
Partition 4 (_4 - 4 )
Partition 5 (_5(D) - 5 )


Coalescible Partition map 

Partition 0, base 0 (_5(D) - 5 )


Partition map 

Partition 0 (_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (a_1 - 1 )
Partition 1 (_4 - 4 )
Partition 2 (_5(D) - 5 )

int main ()
{
  int a;
  int D.4830;
  int _4;
  int _5(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  a_1 = 4;
  printf ("%d", a_1);
  _4 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}


Partition 0: size 4 align 4
	a_1

;; Generating RTL for gimple basic block 2

;; a_1 = 4;

(insn 5 4 6 (set (reg:SI 94)
        (const_int 4 [0x4])) "test.c":3:9 -1
     (nil))

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 87 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
        (reg:SI 94)) "test.c":3:9 -1
     (nil))

;; printf ("%d", a_1);

(insn 7 6 8 (set (reg:SI 1 x1)
        (mem/c:SI (plus:DI (reg/f:DI 87 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "test.c":4:5 -1
     (nil))

(insn 8 7 9 (set (reg:DI 95)
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0xe081999603f0 *.LC0>))) "test.c":4:5 -1
     (nil))

(insn 9 8 10 (set (reg:DI 0 x0)
        (lo_sum:DI (reg:DI 95)
            (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0xe081999603f0 *.LC0>))) "test.c":4:5 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0xe081999603f0 *.LC0>)
        (nil)))

(call_insn 10 9 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0xe08199b28400 printf>) [0 __builtin_printf S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "test.c":4:5 -1
     (nil)
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))

;; _4 = 1;

(insn 11 10 0 (set (reg:SI 92 [ _4 ])
        (const_int 1 [0x1])) "test.c":5:12 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 12 11 13 2 (nil) [0 uses])

(note 13 12 0 NOTE_INSN_BASIC_BLOCK)

;; return _4;

(insn 14 13 15 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ _4 ])) "test.c":6:1 -1
     (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 0)) "test.c":6:1 -1
     (nil))

(barrier 16 15 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 15.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 94)
        (const_int 4 [0x4])) "test.c":3:9 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 87 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
        (reg:SI 94)) "test.c":3:9 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 x1)
        (mem/c:SI (plus:DI (reg/f:DI 87 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "test.c":4:5 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 95)
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0xe081999603f0 *.LC0>))) "test.c":4:5 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 0 x0)
        (lo_sum:DI (reg:DI 95)
            (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0xe081999603f0 *.LC0>))) "test.c":4:5 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0xe081999603f0 *.LC0>)
        (nil)))
(call_insn 10 9 11 2 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0xe08199b28400 printf>) [0 __builtin_printf S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "test.c":4:5 -1
     (nil)
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))
(insn 11 10 14 2 (set (reg:SI 92 [ _4 ])
        (const_int 1 [0x1])) "test.c":5:12 -1
     (nil))
(insn 14 11 18 2 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ _4 ])) "test.c":6:1 -1
     (nil))
(insn 18 14 19 2 (set (reg/i:SI 0 x0)
        (reg:SI 93 [ <retval> ])) "test.c":6:1 -1
     (nil))
(insn 19 18 0 2 (use (reg/i:SI 0 x0)) "test.c":6:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

